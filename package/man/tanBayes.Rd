% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tanBayes.R
\name{tanBayes}
\alias{predict.tanBayes}
\alias{tanBayes}
\alias{tanBayes.default}
\alias{tanBayes.formula}
\title{TAN Bayes Classifier}
\usage{
tanBayes(x, ...)

\method{tanBayes}{default}(x, y, laplace = 0, ...)

\method{tanBayes}{formula}(formula, data, laplace = 0, ..., subset,
  na.action = na.pass)

\method{predict}{tanBayes}(object, newdata, type = c("class", "raw"),
  threshold = 0.001, eps = 0, ...)
}
\arguments{
\item{x}{Input data (a numeric matrix or a data frame of 
categorical and/or numeric variables).}

\item{...}{Not used.}

\item{y}{Class vector.}

\item{laplace}{Laplace smoothing parameter. Default value (0) disables smoothing.}

\item{formula}{A formula of the form \code{class ~ x1 + x2 +
\dots}. Interactions are not allowed.}

\item{data}{Input data (a data frame of categorical and/or numeric variables).}

\item{subset}{Currently not used.}

\item{na.action}{A function to specify the action to be taken if \code{NA}s are
found. The default action is not to count them for the
computation of the probability factors. An
alternative is na.omit, which leads to rejection of cases
with missing values on any required variable. (NOTE: If
given, this argument must be named.)}

\item{object}{An object of class \code{tanBayes}.}

\item{newdata}{Test data.}

\item{type}{Currently not used.}

\item{threshold}{Value replacing cells with probabilities within \code{eps} range.}

\item{eps}{A double for specifying an epsilon-range to apply Laplace
smoothing (to replace zero or close-zero probabilities by \code{theshold}).}
}
\value{
An object of class \code{tanBayes}.
}
\description{
Builds Tree-Augmented-Naive Bayes model from data
using calculated conditional mutual information matrix.
}
\section{Methods (by class)}{
\itemize{
\item \code{default}: TAN Bayes Classifier

\item \code{formula}: TAN Bayes Classifier

\item \code{tanBayes}: Predict function for TAN Bayes
}}
\examples{
data(iris)
model <- tanBayes(Species ~ ., data = iris)
table(predict(model, iris), iris$Species)

}

